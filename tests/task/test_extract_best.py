import os

from tests.fixtures import DataDir

nbest = """0 ||| Реформа, направленная на выдвижение условий, идет слишком медленно. ||| F0= -9.21191 F1= -11.53 ||| -1.22059
0 ||| Реформа, направленная на выдвижение условий, проходит слишком медленно. ||| F0= -10.1025 F1= -11.1262 ||| -1.24908
0 ||| Реформа условий была слишком медленной. ||| F0= -6.67615 F1= -6.21271 ||| -1.28906
0 ||| Реформа, направленная на выдвижение условий, идет слишком медленными темпами. ||| F0= -12.3186 F1= -13.4513 ||| -1.28906
0 ||| Реформа, направленная на выдвижение условий, осуществляется слишком медленно. ||| F0= -9.85156 F1= -12.1434 ||| -1.29412
0 ||| Реформа до обусловленности была слишком медленной. ||| F0= -9.59259 F1= -6.63153 ||| -1.35026
0 ||| Реформа системы обусловленности была слишком медленной. ||| F0= -10.0087 F1= -7.58777 ||| -1.46484
0 ||| Реформа системы обусловленности идет слишком медленно. ||| F0= -9.89215 F1= -6.91754 ||| -1.52699
1 ||| Помощь по-прежнему носит фрагментарный характер, а доноры не координируют свою деятельность. ||| F0= -7.94812 F1= -8.49457 ||| -0.821875
1 ||| Помощь по-прежнему раздроблена, а доноры не координируют свою деятельность. ||| F0= -7.23773 F1= -8.77496 ||| -0.842928
1 ||| Помощь по-прежнему фрагментирована, а доноры не координируют свою деятельность. ||| F0= -8.4671 F1= -6.81989 ||| -0.848524
1 ||| Помощь остается раздробленной, а доноры - нескоординированными. ||| F0= -7.95831 F1= -8.09065 ||| -0.891493
1 ||| Помощь по-прежнему носит фрагментарный характер, а доноры не координируют свои действия. ||| F0= -9.28394 F1= -9.13013 ||| -0.920313
1 ||| Помощь по-прежнему раздроблена, а доноры не координируются. ||| F0= -6.3092 F1= -9.73718 ||| -0.943934
1 ||| Помощь по-прежнему раздроблена, а доноры не координируют свои усилия. ||| F0= -8.31525 F1= -9.74164 ||| -0.949836
1 ||| Помощь по-прежнему фрагментирована, а доноры не координируются. ||| F0= -7.51941 F1= -7.84265 ||| -0.959961"""

refs = """Реформирование кондициональности проходит слишком медленно.
Помощь по-прежнему оказывается фрагментарно, а действия доноров не координируются."""


def test_extract_best_chrf():
    data_dir = DataDir("test_extract_best")
    data_dir.create_file("file.1.nbest", nbest)
    data_dir.create_file("file.1.ref", refs)
    data_dir.mkdir("artifacts")
    env = {
        "TEST_ARTIFACTS": data_dir.path,
        "SRC": "en",
        "TRG": "ru",
    }

    data_dir.run_task("distillation-parallel-src-extract-best-en-ru-1/10", env=env)

    output_file = os.path.join(data_dir.path, "artifacts", "file.1.nbest.out")
    assert os.path.isfile(output_file)
    with open(output_file, "r") as f:
        output = f.read()
    assert (
        output == "Реформа, направленная на выдвижение условий, проходит слишком медленно.\n"
        "Помощь по-прежнему носит фрагментарный характер, а доноры не координируют свои действия.\n"
    )


nbest_empty = """0 ||| .GDFMAKERPROJECTファイルを開くには?
0 ||| .GDMAKERPROJECTファイルを開くには?
0 ||| .GDFMAKERPROJECTファイルを開くには?
0 ||| .GDFMakerPROJECTファイルを開くには?
0 ||| .GDFAKERPROJECTファイルを開くには?
0 ||| .GDMakerPROJECTファイルを開くには?
0 ||| .GDFMAKERPROJECTファイルを開くには。
0 |||
1 ||| このタイプの生産ラインはhydrapulperシステム、自動形成機械およびcorollary装置によって構成されます。
1 ||| このタイプの生産ラインはhydrapulperシステム、自動形成機械およびcolrollary装置によって構成されます。
1 ||| このタイプの生産ラインはhydrapulperシステム、自動形成機械およびcorollary装置によって構成されます。
1 ||| このタイプの生産ラインはhydrapulperシステム、自動形成機械およびcorollary装置によって構成されます。
1 ||| このタイプの生産ラインはhydrapulperシステム、自動形成機械およびcorollary装置によって構成されます。
1 ||| このタイプの生産ラインはhydrapulperシステム、自動形成機械およびcorollary装置によって構成されます。
1 ||| このタイプの生産ラインはhydrapulperシステム、自動形成機械およびcorollary装置によって構成されます。
1 ||| """
refs_empty = """.GDFAKERPROJECTファイルを開くには?
このタイプの生産ラインはhydrapulperシステム、自動形成機械およびcolrollary装置によって構成されます。"""


def test_extract_best_empty():
    data_dir = DataDir("test_extract_best")
    data_dir.create_file("file.1.nbest", nbest_empty)
    data_dir.create_file("file.1.ref", refs_empty)
    data_dir.mkdir("artifacts")
    env = {
        "TEST_ARTIFACTS": data_dir.path,
        "SRC": "en",
        "TRG": "ru",
    }

    data_dir.run_task("distillation-parallel-src-extract-best-en-ru-1/10", env=env)

    output_file = os.path.join(data_dir.path, "artifacts", "file.1.nbest.out")
    assert os.path.isfile(output_file)
    with open(output_file, "r") as f:
        output = f.read()
    assert output.strip() == refs_empty
