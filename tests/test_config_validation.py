"""
Test that all the configs in the project are validated.
"""

from typing import Any
import yaml
import pytest
from translations_taskgraph.actions.train import get_train_parameters, get_config_schema
from taskgraph.parameters import Parameters
from jsonschema import validate


def load_yaml(path: str):
    with open(path, "r") as file:
        yaml_text = file.read()
        return yaml.safe_load(yaml_text)


@pytest.mark.parametrize(
    "config_path",
    [
        "taskcluster/configs/config.ci.yml",
        "taskcluster/configs/config.prod.yml",
        "tests/fixtures/config.pytest.enzh.yml",
        "tests/fixtures/config.pytest.yml",
        # If this one fails the config generator needs to be updated.
        #   utils/config_generator.py
        # Re-generate the example config with:
        #   task config-generator -- en pl --name example
        "configs/autogenerated/en-pl-example.yml",
    ],
)
def test_config_validation(config_path: str):
    training_config = load_yaml(config_path)
    training_config_schema = get_config_schema(load_yaml("taskcluster/config.yml"))
    validate(training_config, training_config_schema)

    parameters_input = Parameters(**load_yaml("artifacts/parameters.yml"))
    parameters_output: Any = get_train_parameters(parameters_input, training_config)
    validate(parameters_output["training_config"], training_config_schema)
