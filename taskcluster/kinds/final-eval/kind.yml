# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
---

loader: taskgraph.loader.transform:loader

transforms:
  - translations_taskgraph.transforms.worker_selection
  - taskgraph.transforms.task_context
  - taskgraph.transforms.run
  - taskgraph.transforms.task

kind-dependencies: []

tasks:
  llm:
    description: >
      Run the final evaluations of a model using an LLM.
    attributes:
      stage: final-eval
      src: "{src}"
      trg: "{trg}"
      corpus_src: "{corpus_src}"
      corpus_trg: "{corpus_trg}"
      corpus_ref: "{corpus_ref}"

    task-context:
      from-parameters:
        src: eval_config.model.src
        trg: eval_config.model.trg
        model_service: eval_config.model.service
        model_architecture: eval_config.model.architecture
        model_name: eval_config.model.name
        corpus_src: eval_config.corpus.src
        corpus_trg: eval_config.corpus.trg
        corpus_ref: eval_config.corpus.ref
      substitution-fields:
        - attributes
        - run.command

    scopes:
      - secrets:get:project/translations/level-1/chatgpt

    run-on-tasks-for: []
    worker-type: b-cpu
    worker:
      chain-of-trust: true
      docker-image: {"in-tree": "train"}
      max-run-time: 86400
      volumes:
        - /builds/worker/artifacts
      artifacts:
        - name: public/build
          path: /builds/worker/artifacts
          type: volume
      # 128 happens when cloning this repository fails
      retry-exit-status: [128]

    run:
      using: run-task
      use-caches: [checkout, pip]
      command:
        - bash
        - -c
        - >-
          pip3 install -r $VCS_PATH/pipeline/eval/requirements/llm.txt &&
          export PYTHONPATH=$PYTHONPATH:$VCS_PATH &&
          python3 $VCS_PATH/pipeline/eval/llm.py
          --model_service {model_service}
          --model_architecture {model_architecture}
          --model_name {model_name}
          --corpus_src {corpus_src}
          --corpus_trg {corpus_trg}
          --corpus_ref {corpus_ref}
          --artifacts $TASK_WORKDIR/artifacts
          --src {src}
          --trg {trg}
